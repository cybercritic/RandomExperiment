//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Random_Experiment_WPF.RandomExperimentService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SQLData", Namespace="http://schemas.datacontract.org/2004/07/Random_Experiment_Server.DB")]
    [System.SerializableAttribute()]
    public partial class SQLData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MeanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MedianField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StdDevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Mean {
            get {
                return this.MeanField;
            }
            set {
                if ((this.MeanField.Equals(value) != true)) {
                    this.MeanField = value;
                    this.RaisePropertyChanged("Mean");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Median {
            get {
                return this.MedianField;
            }
            set {
                if ((this.MedianField.Equals(value) != true)) {
                    this.MedianField = value;
                    this.RaisePropertyChanged("Median");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StdDev {
            get {
                return this.StdDevField;
            }
            set {
                if ((this.StdDevField.Equals(value) != true)) {
                    this.StdDevField = value;
                    this.RaisePropertyChanged("StdDev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeZone {
            get {
                return this.TimeZoneField;
            }
            set {
                if ((this.TimeZoneField.Equals(value) != true)) {
                    this.TimeZoneField = value;
                    this.RaisePropertyChanged("TimeZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="RandomExperimentService.IRandomServer")]
    public interface IRandomServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IRandomServer/GetToken", ReplyAction="urn:IRandomServer/GetTokenResponse")]
        string GetToken();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:IRandomServer/GetToken", ReplyAction="urn:IRandomServer/GetTokenResponse")]
        System.IAsyncResult BeginGetToken(System.AsyncCallback callback, object asyncState);
        
        string EndGetToken(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IRandomServer/SubmitStatus", ReplyAction="urn:IRandomServer/SubmitStatusResponse")]
        string SubmitStatus(string token, Random_Experiment_WPF.RandomExperimentService.SQLData data);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:IRandomServer/SubmitStatus", ReplyAction="urn:IRandomServer/SubmitStatusResponse")]
        System.IAsyncResult BeginSubmitStatus(string token, Random_Experiment_WPF.RandomExperimentService.SQLData data, System.AsyncCallback callback, object asyncState);
        
        string EndSubmitStatus(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRandomServerChannel : Random_Experiment_WPF.RandomExperimentService.IRandomServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubmitStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SubmitStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RandomServerClient : System.ServiceModel.ClientBase<Random_Experiment_WPF.RandomExperimentService.IRandomServer>, Random_Experiment_WPF.RandomExperimentService.IRandomServer {
        
        private BeginOperationDelegate onBeginGetTokenDelegate;
        
        private EndOperationDelegate onEndGetTokenDelegate;
        
        private System.Threading.SendOrPostCallback onGetTokenCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubmitStatusDelegate;
        
        private EndOperationDelegate onEndSubmitStatusDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitStatusCompletedDelegate;
        
        public RandomServerClient() {
        }
        
        public RandomServerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RandomServerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RandomServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RandomServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetTokenCompletedEventArgs> GetTokenCompleted;
        
        public event System.EventHandler<SubmitStatusCompletedEventArgs> SubmitStatusCompleted;
        
        public string GetToken() {
            return base.Channel.GetToken();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetToken(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetToken(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetToken(System.IAsyncResult result) {
            return base.Channel.EndGetToken(result);
        }
        
        private System.IAsyncResult OnBeginGetToken(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetToken(callback, asyncState);
        }
        
        private object[] OnEndGetToken(System.IAsyncResult result) {
            string retVal = this.EndGetToken(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTokenCompleted(object state) {
            if ((this.GetTokenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTokenCompleted(this, new GetTokenCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTokenAsync() {
            this.GetTokenAsync(null);
        }
        
        public void GetTokenAsync(object userState) {
            if ((this.onBeginGetTokenDelegate == null)) {
                this.onBeginGetTokenDelegate = new BeginOperationDelegate(this.OnBeginGetToken);
            }
            if ((this.onEndGetTokenDelegate == null)) {
                this.onEndGetTokenDelegate = new EndOperationDelegate(this.OnEndGetToken);
            }
            if ((this.onGetTokenCompletedDelegate == null)) {
                this.onGetTokenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTokenCompleted);
            }
            base.InvokeAsync(this.onBeginGetTokenDelegate, null, this.onEndGetTokenDelegate, this.onGetTokenCompletedDelegate, userState);
        }
        
        public string SubmitStatus(string token, Random_Experiment_WPF.RandomExperimentService.SQLData data) {
            return base.Channel.SubmitStatus(token, data);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSubmitStatus(string token, Random_Experiment_WPF.RandomExperimentService.SQLData data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubmitStatus(token, data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSubmitStatus(System.IAsyncResult result) {
            return base.Channel.EndSubmitStatus(result);
        }
        
        private System.IAsyncResult OnBeginSubmitStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Random_Experiment_WPF.RandomExperimentService.SQLData data = ((Random_Experiment_WPF.RandomExperimentService.SQLData)(inValues[1]));
            return this.BeginSubmitStatus(token, data, callback, asyncState);
        }
        
        private object[] OnEndSubmitStatus(System.IAsyncResult result) {
            string retVal = this.EndSubmitStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSubmitStatusCompleted(object state) {
            if ((this.SubmitStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitStatusCompleted(this, new SubmitStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitStatusAsync(string token, Random_Experiment_WPF.RandomExperimentService.SQLData data) {
            this.SubmitStatusAsync(token, data, null);
        }
        
        public void SubmitStatusAsync(string token, Random_Experiment_WPF.RandomExperimentService.SQLData data, object userState) {
            if ((this.onBeginSubmitStatusDelegate == null)) {
                this.onBeginSubmitStatusDelegate = new BeginOperationDelegate(this.OnBeginSubmitStatus);
            }
            if ((this.onEndSubmitStatusDelegate == null)) {
                this.onEndSubmitStatusDelegate = new EndOperationDelegate(this.OnEndSubmitStatus);
            }
            if ((this.onSubmitStatusCompletedDelegate == null)) {
                this.onSubmitStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitStatusCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitStatusDelegate, new object[] {
                        token,
                        data}, this.onEndSubmitStatusDelegate, this.onSubmitStatusCompletedDelegate, userState);
        }
    }
}
